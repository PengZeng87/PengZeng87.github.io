<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>彭曾 Vincent Peng</title>
  
  <subtitle>南方科技大学</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pengzeng.tech/"/>
  <updated>2018-09-04T15:25:47.924Z</updated>
  <id>http://pengzeng.tech/</id>
  
  <author>
    <name>彭曾</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>树莓派采集HOKUYO激光雷达数据</title>
    <link href="http://pengzeng.tech/2016/09/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%87%87%E9%9B%86HOKUYO%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE%E6%95%B0%E6%8D%AE/"/>
    <id>http://pengzeng.tech/2016/09/02/树莓派采集HOKUYO激光雷达数据/</id>
    <published>2016-09-02T03:52:56.000Z</published>
    <updated>2018-09-04T15:25:47.924Z</updated>
    
    <content type="html"><![CDATA[<p>前一篇讲到在树莓派上安装mrpt，其实我安装mrpt的最终目的是利用树莓派采集Hokuyo的数据。<br><a id="more"></a><br>连接Hokuyo后，要设置ip 掩码 和 网关：<br><img src="./20160902115049222.png" alt=""><br><img src="./20160902115105316.png" alt=""></p><p>下面是采集Hokuyo数据并显示的代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mrpt/hwdrivers/CHokuyoURG.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mrpt/hwdrivers/CSerialPort.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mrpt/gui/CDisplayWindowPlots.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mrpt/obs/CObservation2DRangeScan.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mrpt/maps/CSimplePointsMap.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mrpt/system/string_utils.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mrpt/system/threads.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mrpt/system/os.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Test_HOKUYO</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mrpt::hwdrivers::CHokuyoURGlaser;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span>ip = <span class="string">"192.168.0.10"</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span>port = <span class="number">10940</span>;</span><br><span class="line"></span><br><span class="line">laser.setIPandPort( ip, port );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!laser.turnOn())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Initialization failed!\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mrpt::gui::<span class="function">CDisplayWindowPlots<span class="title">win</span><span class="params">(<span class="string">"Laser scans"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Press any key to stop capturing..."</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">mrpt::utils::CTicTac     tictac;</span><br><span class="line">tictac.Tic();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (!mrpt::system::os::kbhit())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">bool</span> thereIsObservation,hardError;</span><br><span class="line">mrpt::obs::CObservation2DRangeScan obs;</span><br><span class="line"></span><br><span class="line">laser.doProcessSimple( thereIsObservation, obs, hardError );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (hardError)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Hardware error=true!!\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (thereIsObservation)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> FPS = <span class="number">1.0</span> / tictac.Tac();</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Scan received: %u ranges, FOV: %.02fdeg, %.03fHz: mid rang=%fm\n"</span>,</span><br><span class="line">(<span class="keyword">unsigned</span> <span class="keyword">int</span>)obs.scan.size(),</span><br><span class="line">mrpt::utils::RAD2DEG(obs.aperture),</span><br><span class="line">FPS,</span><br><span class="line">obs.scan[obs.scan.size()/<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">obs.sensorPose = mrpt::poses::CPose3D(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">mrpt::maps::CSimplePointsMaptheMap;</span><br><span class="line">theMap.insertionOptions.minDistBetweenLaserPoints= <span class="number">0</span>;</span><br><span class="line">theMap.insertObservation( &amp;obs );</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt;xs,ys,zs;</span><br><span class="line">theMap.getAllPoints(xs,ys,zs);</span><br><span class="line">win.plot(xs,ys,<span class="string">".b3"</span>);</span><br><span class="line">win.axis_equal();</span><br><span class="line"></span><br><span class="line">tictac.Tic();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mrpt::system::sleep(<span class="number">15</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">laser.turnOff();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">Test_HOKUYO();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (<span class="built_in">std</span>::exception &amp;e)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"EXCEPCION: "</span> &lt;&lt; e.what() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (...)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Another exception!!"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>CMakeLists.txt文件：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span>(sampleName HOKUYO_laser_test)</span><br><span class="line"><span class="keyword">SET</span>(PRJ_NAME <span class="string">"$&#123;sampleName&#125;"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">PROJECT</span>(<span class="variable">$&#123;PRJ_NAME&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CMAKE_MINIMUM_REQUIRED</span>(VERSION <span class="number">2.4</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span>(EXECUTABLE_OUTPUT_PATH <span class="string">"."</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD_EXECUTABLE</span>(<span class="variable">$&#123;sampleName&#125;</span> HOKUYO_laser_test.cpp  ) </span><br><span class="line"></span><br><span class="line"><span class="keyword">SET_TARGET_PROPERTIES</span>(</span><br><span class="line"><span class="variable">$&#123;sampleName&#125;</span> </span><br><span class="line">PROPERTIES </span><br><span class="line">PROJECT_LABEL <span class="string">"(EXAMPLE) $&#123;sampleName&#125;"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">TARGET_LINK_LIBRARIES</span>(</span><br><span class="line"><span class="variable">$&#123;sampleName&#125;</span> </span><br><span class="line"><span class="variable">$&#123;MRPT_LIBS&#125;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">IF</span>(CMAKE_COMPILER_IS_GNUCXX <span class="keyword">AND</span> NOT CMAKE_BUILD_TYPE <span class="keyword">MATCHES</span> <span class="string">"Debug"</span>)</span><br><span class="line"><span class="keyword">SET</span>(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; -O3"</span>)</span><br><span class="line"><span class="keyword">ENDIF</span>(CMAKE_COMPILER_IS_GNUCXX <span class="keyword">AND</span> NOT CMAKE_BUILD_TYPE <span class="keyword">MATCHES</span> <span class="string">"Debug"</span>)</span><br></pre></td></tr></table></figure></p><p>最后获得激光雷达数据的效果图如下：<br><img src="./20160902114952705.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前一篇讲到在树莓派上安装mrpt，其实我安装mrpt的最终目的是利用树莓派采集Hokuyo的数据。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="树莓派" scheme="http://pengzeng.tech/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="mrpt" scheme="http://pengzeng.tech/tags/mrpt/"/>
    
      <category term="HOKUYO" scheme="http://pengzeng.tech/tags/HOKUYO/"/>
    
      <category term="激光雷达" scheme="http://pengzeng.tech/tags/%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>树莓派安装mrpt</title>
    <link href="http://pengzeng.tech/2016/09/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85mrpt/"/>
    <id>http://pengzeng.tech/2016/09/02/树莓派安装mrpt/</id>
    <published>2016-09-02T01:52:01.000Z</published>
    <updated>2018-01-15T13:12:51.699Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍在树莓派上安装mrpt。</p><p>手头有一枚树莓派，闲置很久了，最近又有个项目要用到，所以再次把她请了出来。<br>项目需要驱动机器人平台小车并采集激光雷达的数据，这时mrpt是再适合不过的了。<br><a id="more"></a><br>我们在mrpt的Linux安装向导页<a href="http://www.mrpt.org/MRPT_in_GNU/Linux_repositories" target="_blank" rel="noopener">http://www.mrpt.org/MRPT_in_GNU/Linux_repositories</a></p><p>可以看到，mrpt是支持树莓派的，但是<strong>只支持armf版本的系统</strong>，可以前往ubuntu mate for raspberryPi下载最新的ubuntu mate。<br>给树梅派烧录ubuntu mate 的过程可以按照网站上的步骤来，这里就不再多说了，相信大家都过四级了。</p><p>要注意的是，<strong>一定要安装ubuntu mate 16.04或更新的系统</strong>，否则不支持mrpt。</p><p>装完系统后，</p><p>先更新下<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update  </span><br><span class="line">sudo apt-<span class="builtin-name">get</span><span class="built_in"> upgrade </span> </span><br></pre></td></tr></table></figure><br>再回到mrpt，按照向导上的，只要三条命令就OK了~<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:joseluisblancoc/mrpt  </span><br><span class="line">sudo apt-get update  </span><br><span class="line">sudo apt-get install libmrpt-dev mrpt-apps    </span><br><span class="line"><span class="comment"># ONLY if you want debug -dbg packages</span></span><br><span class="line"><span class="comment">#sudo apt-get install libmrpt-dbg</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍在树莓派上安装mrpt。&lt;/p&gt;
&lt;p&gt;手头有一枚树莓派，闲置很久了，最近又有个项目要用到，所以再次把她请了出来。&lt;br&gt;项目需要驱动机器人平台小车并采集激光雷达的数据，这时mrpt是再适合不过的了。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="树莓派" scheme="http://pengzeng.tech/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="mrpt" scheme="http://pengzeng.tech/tags/mrpt/"/>
    
  </entry>
  
  <entry>
    <title>树莓派调整分区大小</title>
    <link href="http://pengzeng.tech/2016/09/01/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B0%83%E6%95%B4%E5%88%86%E5%8C%BA%E5%A4%A7%E5%B0%8F/"/>
    <id>http://pengzeng.tech/2016/09/01/树莓派调整分区大小/</id>
    <published>2016-09-01T11:47:11.000Z</published>
    <updated>2018-09-04T15:26:15.494Z</updated>
    
    <content type="html"><![CDATA[<p>我们在往TF卡烧完系统之后，会发现TF卡的可用空间只有4G左右了，这时我们需要执行下面的操作来恢复存储空间。<br><a id="more"></a><br>执行命令：<code>sudo fdisk /dev/mmcblk0</code><br>按<strong>P</strong><br>将看到的分区复制下来 /dev/mmcblk0p2 的start值，122880。下面会用到。<br>执行命令：<strong>d</strong>  （删除分区2,选择2）<br>执行命令：<strong>p</strong> （按这时候应该是少了一个分区了）<br>执行命令：<strong>n</strong>  (加分区)<br>执行命令：<strong>p</strong> （主要分区）<br>选择2<br>在开始位置输入 start 的值，如下图122880，看下图<br>后面的值默认即可<br>执行命令：<strong>p</strong><br>执行命令：<strong>w</strong><br><img src="./20170703165037761.png" alt=""></p><p>重启树莓派：<code>sudo reboot</code><br>开机后执行下面的命令用于修复分区：<code>sudo resize2fs /dev/mmcblk0p2</code> </p><p>执行成功后，再次<strong>df</strong>看看。<br><img src="./20141206220858.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们在往TF卡烧完系统之后，会发现TF卡的可用空间只有4G左右了，这时我们需要执行下面的操作来恢复存储空间。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="树莓派" scheme="http://pengzeng.tech/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>基于Kinect的室内三维重建</title>
    <link href="http://pengzeng.tech/2016/08/14/%E5%9F%BA%E4%BA%8EKinect%E7%9A%84%E5%AE%A4%E5%86%85%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    <id>http://pengzeng.tech/2016/08/14/基于Kinect的室内三维重建/</id>
    <published>2016-08-14T09:30:03.000Z</published>
    <updated>2018-09-04T15:25:20.604Z</updated>
    
    <content type="html"><![CDATA[<p>由于项目要求，最近实现了基于Kinect的室内三维重建。</p><p>由飞行器载着Kinect在室内扫描，获取彩图与深度图，通过Socket实时传输到PC上，实时重建出室内三维形貌。<br><a id="more"></a><br>效果图：</p><p><img src="./20160814172623967.png" alt=""></p><p><img src="./20160814172806470.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于项目要求，最近实现了基于Kinect的室内三维重建。&lt;/p&gt;
&lt;p&gt;由飞行器载着Kinect在室内扫描，获取彩图与深度图，通过Socket实时传输到PC上，实时重建出室内三维形貌。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Kinect" scheme="http://pengzeng.tech/tags/Kinect/"/>
    
      <category term="三维重建" scheme="http://pengzeng.tech/tags/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Kinect采集彩图和深度图并通过Socket传输</title>
    <link href="http://pengzeng.tech/2016/08/14/Kinect%E9%87%87%E9%9B%86%E5%BD%A9%E5%9B%BE%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%B9%B6%E9%80%9A%E8%BF%87Socket%E4%BC%A0%E8%BE%93/"/>
    <id>http://pengzeng.tech/2016/08/14/Kinect采集彩图和深度图并通过Socket传输/</id>
    <published>2016-08-14T09:08:23.000Z</published>
    <updated>2018-09-04T15:22:15.150Z</updated>
    
    <content type="html"><![CDATA[<p>由于项目要求，不久前实现了采集Kinect的彩图和深度图并通过Socket传输到另一台PC上。</p><p>在Windows中采集，通过socket发送到Ubuntu中。<br><a id="more"></a><br><strong>环境</strong>：</p><ul><li>Windows 10 + VS2012 + Kinect for Windows SDK2.0 + OpenCV2.4.10 </li><li>Ubuntu 14.04 LTS + OpenCV2.4.10</li></ul><p>Windows 发送的视频：<br><img src="./20160814170631023.png" alt=""></p><p>Ubuntu 接收的视频：<br><img src="./20160814170648767.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于项目要求，不久前实现了采集Kinect的彩图和深度图并通过Socket传输到另一台PC上。&lt;/p&gt;
&lt;p&gt;在Windows中采集，通过socket发送到Ubuntu中。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Kinect" scheme="http://pengzeng.tech/tags/Kinect/"/>
    
      <category term="Socket" scheme="http://pengzeng.tech/tags/Socket/"/>
    
      <category term="视频传输" scheme="http://pengzeng.tech/tags/%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93/"/>
    
  </entry>
  
  <entry>
    <title>基于Socket和OpenCV的实时视频传输（On Linux）</title>
    <link href="http://pengzeng.tech/2016/08/14/%E5%9F%BA%E4%BA%8ESocket%E5%92%8COpenCV%E7%9A%84%E5%AE%9E%E6%97%B6%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%EF%BC%88On%20Linux%EF%BC%89/"/>
    <id>http://pengzeng.tech/2016/08/14/基于Socket和OpenCV的实时视频传输（On Linux）/</id>
    <published>2016-08-14T08:34:53.000Z</published>
    <updated>2018-01-08T02:32:19.851Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇介绍了在Windows上实现基于Socket和openCV的实时视频传输，这一篇将继续讲解在Linux上的实现。<br><a id="more"></a></p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>Server： Ubuntu 14.04 LTS + OpenCV2.4.10<br>Client:： Ubuntu 14.04 LTS + OpenCV2.4.10 </p><h3 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a>通信协议</h3><p>我采用的仍是TCP协议的通信，Linux上的实现和Windows大同小异。<br>Linux中OpenCV的编译安装可以参考 <a href="http://blog.csdn.net/pengz0807/article/details/49915573" target="_blank" rel="noopener">http://blog.csdn.net/pengz0807/article/details/49915573</a></p><p>TCP协议通信的一般步骤我再重新说一下：</p><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><ol><li>创建一个socket，用函数socket()；</li><li>设置socket属性，用函数setsockopt();* 可选</li><li>绑定IP地址、端口等信息到socket上，用函数bind();* 可选</li><li>设置要连接的对方的IP地址和端口等属性；</li><li>连接服务器，用函数connect()；</li><li>收发数据，用函数send()和recv()，或者read()和write();</li><li>关闭网络连接；</li></ol><h4 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h4><ol><li>创建一个socket，用函数socket()；</li><li>设置socket属性，用函数setsockopt(); * 可选</li><li>绑定IP地址、端口等信息到socket上，用函数bind();</li><li>开启监听，用函数listen()；</li><li>接收客户端上来的连接，用函数accept()；</li><li>收发数据，用函数send()和recv()，或者read()和write();</li><li>关闭网络连接；</li><li>关闭监听； </li></ol><h3 id="图像传输类"><a href="#图像传输类" class="headerlink" title="图像传输类"></a>图像传输类</h3><p>我把图像的发送和接收分别封装在了两个类中：</p><h4 id="采集与发送"><a href="#采集与发送" class="headerlink" title="采集与发送"></a>采集与发送</h4><figure class="highlight cpp"><figcaption><span>SocketMatTransmissionClient.h</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Socket的图像传输（发送）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.07</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __SOCKETMATTRANSMISSIONCLIENT_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __SOCKETMATTRANSMISSIONCLIENT_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/opencv.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="comment">//待传输图像默认大小为 640*480，可修改</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IMG_WIDTH 640<span class="comment">// 需传输图像的宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IMG_HEIGHT 480<span class="comment">// 需传输图像的高</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PACKAGE_NUM 2</span></span><br><span class="line"><span class="comment">//默认格式为CV_8UC3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFFER_SIZE IMG_WIDTH*IMG_HEIGHT*3/PACKAGE_NUM</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sentbuf</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> buf[BUFFER_SIZE];</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SocketMatTransmissionClient</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">SocketMatTransmissionClient(<span class="keyword">void</span>);</span><br><span class="line">~SocketMatTransmissionClient(<span class="keyword">void</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> sockClient;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sentbuf</span> <span class="title">data</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// 打开socket连接</span></span><br><span class="line"><span class="comment">// params :IP服务器的ip地址</span></span><br><span class="line"><span class="comment">//PORT传输端口</span></span><br><span class="line"><span class="comment">// return : -1连接失败</span></span><br><span class="line"><span class="comment">//1连接成功</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">socketConnect</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* IP, <span class="keyword">int</span> PORT)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传输图像</span></span><br><span class="line"><span class="comment">// params : image 待传输图像</span></span><br><span class="line"><span class="comment">// return : -1传输失败</span></span><br><span class="line"><span class="comment">//1传输成功</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">transmit</span><span class="params">(cv::Mat image)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 断开socket连接</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">socketDisconnect</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>SocketMatTransmissionClient.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Socket的图像传输（发送）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.07 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"SocketMatTransmissionClient.h"</span></span></span><br><span class="line"></span><br><span class="line">SocketMatTransmissionClient::SocketMatTransmissionClient(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SocketMatTransmissionClient::~SocketMatTransmissionClient(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> SocketMatTransmissionClient::socketConnect(<span class="keyword">const</span> <span class="keyword">char</span>* IP, <span class="keyword">int</span> PORT)</span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span>    <span class="title">servaddr</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((sockClient = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>)) &lt; <span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"create socket error: %s(errno: %d)\n"</span>, strerror(errno), errno);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(&amp;servaddr, <span class="number">0</span>, <span class="keyword">sizeof</span>(servaddr));</span><br><span class="line">servaddr.sin_family = AF_INET;</span><br><span class="line">servaddr.sin_port = htons(PORT);</span><br><span class="line"><span class="keyword">if</span> (inet_pton(AF_INET, IP, &amp;servaddr.sin_addr) &lt;= <span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"inet_pton error for %s\n"</span>, IP);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (connect(sockClient, (struct sockaddr*)&amp;servaddr, <span class="keyword">sizeof</span>(servaddr)) &lt; <span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"connect error: %s(errno: %d)\n"</span>, strerror(errno), errno);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"connect successful!\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> SocketMatTransmissionClient::socketDisconnect(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">close(sockClient);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> SocketMatTransmissionClient::transmit(cv::Mat image)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (image.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"empty image\n\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(image.cols != IMG_WIDTH || image.rows != IMG_HEIGHT || image.type() != CV_8UC3)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"the image must satisfy : cols == IMG_WIDTH（%d）  rows == IMG_HEIGHT（%d） type == CV_8UC3\n\n"</span>, IMG_WIDTH, IMG_HEIGHT);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; PACKAGE_NUM; k++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> num1 = IMG_HEIGHT / PACKAGE_NUM * k;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; IMG_HEIGHT / PACKAGE_NUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> num2 = i * IMG_WIDTH * <span class="number">3</span>;</span><br><span class="line">uchar* ucdata = image.ptr&lt;uchar&gt;(i + num1);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; IMG_WIDTH * <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">data.buf[num2 + j] = ucdata[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(k == PACKAGE_NUM - <span class="number">1</span>)</span><br><span class="line">data.flag = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">data.flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (send(sockClient, (<span class="keyword">char</span> *)(&amp;data), <span class="keyword">sizeof</span>(data), <span class="number">0</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"send image error: %s(errno: %d)\n"</span>, strerror(errno), errno);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接收与显示"><a href="#接收与显示" class="headerlink" title="接收与显示"></a>接收与显示</h4><figure class="highlight cpp"><figcaption><span>SocketMatTransmissionServer.h</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Socket的图像传输（接收）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.07</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __SOCKETMATTRANSMISSIONSEVER_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __SOCKETMATTRANSMISSIONSEVER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/opencv.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/shm.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PACKAGE_NUM 2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IMG_WIDTH 640</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IMG_HEIGHT 480</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLOCKSIZE IMG_WIDTH*IMG_HEIGHT*3/PACKAGE_NUM</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">recvBuf</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> buf[BLOCKSIZE];</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SocketMatTransmissionServer</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">SocketMatTransmissionServer(<span class="keyword">void</span>);</span><br><span class="line">~SocketMatTransmissionServer(<span class="keyword">void</span>);</span><br><span class="line"><span class="keyword">int</span> sockConn;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">recvBuf</span> <span class="title">data</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> needRecv;</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// 打开socket连接</span></span><br><span class="line"><span class="comment">// params :PORT传输端口</span></span><br><span class="line"><span class="comment">// return : -1连接失败</span></span><br><span class="line"><span class="comment">//1连接成功</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">socketConnect</span><span class="params">(<span class="keyword">int</span> PORT)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传输图像</span></span><br><span class="line"><span class="comment">// params : image待接收图像</span></span><br><span class="line"><span class="comment">//image待接收图像</span></span><br><span class="line"><span class="comment">// return : -1接收失败</span></span><br><span class="line"><span class="comment">//1接收成功</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">receive</span><span class="params">(cv::Mat&amp; image)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 断开socket连接</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">socketDisconnect</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>SocketMatTransmissionServer.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Socket的图像传输（接收）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.07 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"SocketMatTransmissionServer.h"</span></span></span><br><span class="line"></span><br><span class="line">SocketMatTransmissionServer::SocketMatTransmissionServer(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SocketMatTransmissionServer::~SocketMatTransmissionServer(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> SocketMatTransmissionServer::socketConnect(<span class="keyword">int</span> PORT)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> server_sockfd = socket(AF_INET,SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">server_sockaddr</span>;</span></span><br><span class="line">server_sockaddr.sin_family = AF_INET;</span><br><span class="line">server_sockaddr.sin_port = htons(PORT);</span><br><span class="line">server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(bind(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,<span class="keyword">sizeof</span>(server_sockaddr))==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"bind"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(listen(server_sockfd,<span class="number">5</span>) == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"listen"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client_addr</span>;</span></span><br><span class="line"><span class="keyword">socklen_t</span> length = <span class="keyword">sizeof</span>(client_addr);</span><br><span class="line"></span><br><span class="line">sockConn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</span><br><span class="line"><span class="keyword">if</span>(sockConn&lt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"connect"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"connect successful!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(server_sockfd);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> SocketMatTransmissionServer::socketDisconnect(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">close(sockConn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> SocketMatTransmissionServer::receive(cv::Mat&amp; image)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> returnflag = <span class="number">0</span>;</span><br><span class="line">cv::Mat img(IMG_HEIGHT, IMG_WIDTH, CV_8UC3, cv::Scalar(0));</span><br><span class="line">needRecv = <span class="keyword">sizeof</span>(recvBuf);</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(&amp;data,<span class="number">0</span>,<span class="keyword">sizeof</span>(data));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; PACKAGE_NUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len0 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (pos &lt; needRecv)</span><br><span class="line">&#123;</span><br><span class="line">len0 = recv(sockConn, (<span class="keyword">char</span>*)(&amp;data) + pos, needRecv - pos, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len0 &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Server Recieve Data Failed!\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">pos += len0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">count = count + data.flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num1 = IMG_HEIGHT / PACKAGE_NUM * i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; IMG_HEIGHT / PACKAGE_NUM; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> num2 = j * IMG_WIDTH * <span class="number">3</span>;</span><br><span class="line">uchar* ucdata = img.ptr&lt;uchar&gt;(j + num1);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; IMG_WIDTH * <span class="number">3</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line">ucdata[k] = data.buf[num2 + k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (data.flag == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (count == PACKAGE_NUM + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">image = img;</span><br><span class="line">returnflag = <span class="number">1</span>;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(returnflag == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><h4 id="图像的采集与发送"><a href="#图像的采集与发送" class="headerlink" title="图像的采集与发送"></a>图像的采集与发送</h4><figure class="highlight cpp"><figcaption><span>SocketClientMat.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"SocketMatTransmissionClient.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SocketMatTransmissionClient socketMat;</span><br><span class="line"><span class="keyword">if</span> (socketMat.socketConnect(<span class="string">"127.0.0.1"</span>, <span class="number">6666</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cv::<span class="function">VideoCapture <span class="title">capture</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">cv::Mat image;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!capture.isOpened())</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">capture &gt;&gt; image;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (image.empty())</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">socketMat.transmit(image);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">socketMat.socketDisconnect();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接收与显示-1"><a href="#接收与显示-1" class="headerlink" title="接收与显示"></a>接收与显示</h4><figure class="highlight cpp"><figcaption><span>SocketServerMat.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"SocketMatTransmissionServer.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SocketMatTransmissionServer socketMat;</span><br><span class="line"><span class="keyword">if</span> (socketMat.socketConnect(<span class="number">6666</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cv::Mat image;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(socketMat.receive(image) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cv::imshow(<span class="string">""</span>,image);</span><br><span class="line">cv::waitKey(<span class="number">30</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">socketMat.socketDisconnect();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇介绍了在Windows上实现基于Socket和openCV的实时视频传输，这一篇将继续讲解在Linux上的实现。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Socket" scheme="http://pengzeng.tech/tags/Socket/"/>
    
      <category term="视频传输" scheme="http://pengzeng.tech/tags/%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93/"/>
    
      <category term="OpenCV" scheme="http://pengzeng.tech/tags/OpenCV/"/>
    
      <category term="Linux" scheme="http://pengzeng.tech/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>基于Socket和OpenCV的实时视频传输（On Windows）</title>
    <link href="http://pengzeng.tech/2016/08/14/%E5%9F%BA%E4%BA%8ESocket%E5%92%8COpenCV%E7%9A%84%E5%AE%9E%E6%97%B6%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%EF%BC%88On%20Windows%EF%BC%89/"/>
    <id>http://pengzeng.tech/2016/08/14/基于Socket和OpenCV的实时视频传输（On Windows）/</id>
    <published>2016-08-14T06:56:33.000Z</published>
    <updated>2018-01-08T02:32:12.595Z</updated>
    
    <content type="html"><![CDATA[<p>目前由于项目的需要，实现了基于Socket和OpenCV的实时视频传输。<br>由一台PC（Client客户端）采集摄像头图像后经Socket传输到另一台PC（Server服务器）再显示出来。<br>这一篇介绍在Windows上的实现，在下一篇讲解在Linux上的实现。<br><a id="more"></a></p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>Server： Windows 10 + OpenCV2.4.10<br>Client:： Windows 10 + OpenCV2.4.10 </p><h3 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a>通信协议</h3><p>我采用的是TCP协议的通信。</p><p>TCP协议通信的一般步骤：</p><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><ol><li>创建一个socket，用函数socket()； </li><li>设置socket属性，用函数setsockopt();* 可选</li><li>绑定IP地址、端口等信息到socket上，用函数bind();* 可选</li><li>设置要连接的对方的IP地址和端口等属性；</li><li>连接服务器，用函数connect()；</li><li>收发数据，用函数send()和recv()，或者read()和write();</li><li>关闭网络连接；</li></ol><h4 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h4><ol><li>创建一个socket，用函数socket()；</li><li>设置socket属性，用函数setsockopt(); * 可选</li><li>绑定IP地址、端口等信息到socket上，用函数bind();</li><li>开启监听，用函数listen()； </li><li>接收客户端上来的连接，用函数accept()；</li><li>收发数据，用函数send()和recv()，或者read()和write();</li><li>关闭网络连接； </li><li>关闭监听； </li></ol><h3 id="图像传输类"><a href="#图像传输类" class="headerlink" title="图像传输类"></a>图像传输类</h3><p>我把图像的发送和接收分别封装在了两个类中：</p><h4 id="采集与发送"><a href="#采集与发送" class="headerlink" title="采集与发送"></a>采集与发送</h4><figure class="highlight cpp"><figcaption><span>WinsockMatTransmissionClient.h</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Winsock的图像传输（发送）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.06 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __WINSOCKMATTRANSMISSIONCLIENT_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __WINSOCKMATTRANSMISSIONCLIENT_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/opencv.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/highgui/highgui.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/imgproc/imgproc.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/core/core.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"WS2_32.lib"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//待传输图像默认大小为 640*480，可修改</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IMG_WIDTH 640<span class="comment">// 需传输图像的宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IMG_HEIGHT 480<span class="comment">// 需传输图像的高</span></span></span><br><span class="line"><span class="comment">//默认格式为CV_8UC3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFFER_SIZE IMG_WIDTH*IMG_HEIGHT*3/32</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sentbuf</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> buf[BUFFER_SIZE];</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WinsockMatTransmissionClient</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">WinsockMatTransmissionClient(<span class="keyword">void</span>);</span><br><span class="line">~WinsockMatTransmissionClient(<span class="keyword">void</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">SOCKET sockClient;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sentbuf</span> <span class="title">data</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// 打开socket连接</span></span><br><span class="line"><span class="comment">// params :IP服务器的ip地址</span></span><br><span class="line"><span class="comment">//PORT传输端口</span></span><br><span class="line"><span class="comment">// return : -1连接失败</span></span><br><span class="line"><span class="comment">//1连接成功</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">socketConnect</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* IP, <span class="keyword">int</span> PORT)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传输图像</span></span><br><span class="line"><span class="comment">// params : image 待传输图像</span></span><br><span class="line"><span class="comment">// return : -1传输失败</span></span><br><span class="line"><span class="comment">//1传输成功</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">transmit</span><span class="params">(cv::Mat image)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 断开socket连接</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">socketDisconnect</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>WinsockMatTransmissionClient.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Winsock的图像传输（发送）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.06 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"WinsockMatTransmissionClient.h"</span></span></span><br><span class="line"></span><br><span class="line">WinsockMatTransmissionClient::WinsockMatTransmissionClient(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">WinsockMatTransmissionClient::~WinsockMatTransmissionClient(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> WinsockMatTransmissionClient::socketConnect(<span class="keyword">const</span> <span class="keyword">char</span>* IP, <span class="keyword">int</span> PORT)</span><br><span class="line">&#123;</span><br><span class="line">WORD wVersionRequested;</span><br><span class="line">WSADATA wsaData;</span><br><span class="line"><span class="keyword">int</span> err;</span><br><span class="line"></span><br><span class="line">wVersionRequested = MAKEWORD( <span class="number">1</span>, <span class="number">1</span> );</span><br><span class="line"></span><br><span class="line">err = WSAStartup( wVersionRequested, &amp;wsaData );</span><br><span class="line"><span class="keyword">if</span> ( err != <span class="number">0</span> ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( LOBYTE( wsaData.wVersion ) != <span class="number">1</span> ||</span><br><span class="line">HIBYTE( wsaData.wVersion ) != <span class="number">1</span> ) &#123;</span><br><span class="line">WSACleanup( );</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = (sockClient = socket(AF_INET,SOCK_STREAM,<span class="number">0</span>));</span><br><span class="line"><span class="keyword">if</span> (err &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"create socket error: %s(errno: %d)\n\n"</span>, strerror(errno), errno);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"create socket successful!\nnow connect ...\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SOCKADDR_IN addrSrv;</span><br><span class="line">addrSrv.sin_addr.S_un.S_addr=inet_addr(IP);</span><br><span class="line">addrSrv.sin_family=AF_INET;</span><br><span class="line">addrSrv.sin_port=htons(PORT);</span><br><span class="line"></span><br><span class="line">err = connect(sockClient,(SOCKADDR*)&amp;addrSrv,<span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line"><span class="keyword">if</span> (err &lt; <span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"connect error: %s(errno: %d)\n\n"</span>, strerror(errno), errno);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"connect successful!\n\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> WinsockMatTransmissionClient::socketDisconnect(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">closesocket(sockClient);</span><br><span class="line">WSACleanup();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> WinsockMatTransmissionClient::transmit(cv::Mat image)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (image.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"empty image\n\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(image.cols != IMG_WIDTH || image.rows != IMG_HEIGHT || image.type() != CV_8UC3)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"the image must satisfy : cols == IMG_WIDTH（%d）  rows == IMG_HEIGHT（%d） type == CV_8UC3\n\n"</span>, IMG_WIDTH, IMG_HEIGHT);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">32</span>; k++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> num1 = IMG_HEIGHT / <span class="number">32</span> * k;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; IMG_HEIGHT / <span class="number">32</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> num2 = i * IMG_WIDTH * <span class="number">3</span>;</span><br><span class="line">uchar* ucdata = image.ptr&lt;uchar&gt;(i + num1);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; IMG_WIDTH * <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">data.buf[num2 + j] = ucdata[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">31</span>)</span><br><span class="line">data.flag = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">data.flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (send(sockClient, (<span class="keyword">char</span> *)(&amp;data), <span class="keyword">sizeof</span>(data), <span class="number">0</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"send msg error: %s(errno: %d)\n"</span>, strerror(errno), errno);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="图像的接收与显示"><a href="#图像的接收与显示" class="headerlink" title="图像的接收与显示"></a>图像的接收与显示</h4><figure class="highlight cpp"><figcaption><span>WinsockMatTransmissionServer.h</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Winsock的图像传输（接收）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.06 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __WINSOCKMATTRANSMISSIONSEVER_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __WINSOCKMATTRANSMISSIONSEVER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/opencv.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/highgui/highgui.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/imgproc/imgproc.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/core/core.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"WS2_32.lib"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//待传输图像默认大小为 640*480，可修改</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IMG_WIDTH 640<span class="comment">// 需传输图像的宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IMG_HEIGHT 480<span class="comment">// 需传输图像的高</span></span></span><br><span class="line"><span class="comment">//默认格式为CV_8UC3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFFER_SIZE IMG_WIDTH*IMG_HEIGHT*3/32</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">recvbuf</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> buf[BUFFER_SIZE];</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WinsockMatTransmissionServer</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">WinsockMatTransmissionServer(<span class="keyword">void</span>);</span><br><span class="line">~WinsockMatTransmissionServer(<span class="keyword">void</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">SOCKET sockConn;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">recvbuf</span> <span class="title">data</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// 打开socket连接</span></span><br><span class="line"><span class="comment">// params :PORT传输端口</span></span><br><span class="line"><span class="comment">// return : -1连接失败</span></span><br><span class="line"><span class="comment">//1连接成功</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">socketConnect</span><span class="params">(<span class="keyword">int</span> PORT)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传输图像</span></span><br><span class="line"><span class="comment">// params : image待接收图像</span></span><br><span class="line"><span class="comment">// return : -1接收失败</span></span><br><span class="line"><span class="comment">//1接收成功</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">receive</span><span class="params">(cv::Mat&amp; image)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 断开socket连接</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">socketDisconnect</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>WinsockMatTransmissionServer.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Winsock的图像传输（接收）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.06 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"WinsockMatTransmissionServer.h"</span></span></span><br><span class="line"></span><br><span class="line">WinsockMatTransmissionServer::WinsockMatTransmissionServer(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">WinsockMatTransmissionServer::~WinsockMatTransmissionServer(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> WinsockMatTransmissionServer::socketConnect(<span class="keyword">int</span> PORT)</span><br><span class="line">&#123;</span><br><span class="line">WORD wVersionRequested;</span><br><span class="line">WSADATA wsaData;</span><br><span class="line"><span class="keyword">int</span> err;</span><br><span class="line"></span><br><span class="line">wVersionRequested = MAKEWORD(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">err = WSAStartup(wVersionRequested, &amp;wsaData);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (err != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">1</span> ||</span><br><span class="line">HIBYTE(wsaData.wVersion) != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">WSACleanup();</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SOCKET sockSrv = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">SOCKADDR_IN addrSrv;</span><br><span class="line">addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);</span><br><span class="line">addrSrv.sin_family = AF_INET;</span><br><span class="line">addrSrv.sin_port = htons(PORT);</span><br><span class="line">bind(sockSrv, (SOCKADDR*)&amp;addrSrv, <span class="keyword">sizeof</span>(SOCKADDR));</span><br><span class="line">listen(sockSrv, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">SOCKADDR_IN addrClient;</span><br><span class="line"><span class="keyword">int</span> len = <span class="keyword">sizeof</span>(SOCKADDR);</span><br><span class="line">sockConn = accept(sockSrv, (SOCKADDR*)&amp;addrClient, &amp;len);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> nRecvBuf = <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">10</span>;</span><br><span class="line">setsockopt(sockConn, SOL_SOCKET, SO_RCVBUF, (<span class="keyword">const</span> <span class="keyword">char</span>*)&amp;nRecvBuf, <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> WinsockMatTransmissionServer::socketDisconnect(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">closesocket(sockConn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> WinsockMatTransmissionServer::receive(cv::Mat&amp; image)</span><br><span class="line">&#123;</span><br><span class="line">cv::Mat img(IMG_HEIGHT,IMG_WIDTH,CV_8UC3,cv::Scalar(0));</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> needRecv = <span class="keyword">sizeof</span>(recvbuf);</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len0 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (pos &lt; needRecv)</span><br><span class="line">&#123;</span><br><span class="line">len0 = recv(sockConn, (<span class="keyword">char</span>*)(&amp;data) + pos, needRecv - pos, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (len0 &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Server Recieve Data Failed!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">pos += len0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">count = count + data.flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num1 = IMG_HEIGHT / <span class="number">32</span> * i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; IMG_HEIGHT / <span class="number">32</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> num2 = j * IMG_WIDTH * <span class="number">3</span>;</span><br><span class="line">uchar* ucdata = img.ptr&lt;uchar&gt;(j + num1);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; IMG_WIDTH * <span class="number">3</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line">ucdata[k] = data.buf[num2 + k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (data.flag == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (count == <span class="number">33</span>)</span><br><span class="line">&#123;</span><br><span class="line">image = img;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><h4 id="采集与发送-1"><a href="#采集与发送-1" class="headerlink" title="采集与发送"></a>采集与发送</h4><figure class="highlight cpp"><figcaption><span>SocketClientMat.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Winsock的图像传输（发送）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.06 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"WinsockMatTransmissionClient.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WinsockMatTransmissionClient socketMat;</span><br><span class="line"><span class="keyword">if</span> (socketMat.socketConnect(<span class="string">"192.168.1.101"</span>, <span class="number">6666</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cv::<span class="function">VideoCapture <span class="title">capture</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">cv::Mat image;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!capture.isOpened())</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">capture &gt;&gt; image;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (image.empty())</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">socketMat.transmit(image);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">socketMat.socketDisconnect();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接收与显示"><a href="#接收与显示" class="headerlink" title="接收与显示"></a>接收与显示</h4><figure class="highlight cpp"><figcaption><span>WinsockServerMat.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  基于OpenCV和Winsock的图像传输（接收）</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//By 彭曾 , at CUST, 2016.08.06 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//website: www.pengz0807.com  email: pengz0807@163.com </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//M*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"WinsockMatTransmissionServer.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WinsockMatTransmissionServer socketMat;</span><br><span class="line"><span class="keyword">if</span> (socketMat.socketConnect(<span class="number">6666</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cv::Mat image;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(socketMat.receive(image) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cv::imshow(<span class="string">""</span>,image);</span><br><span class="line">cv::waitKey(<span class="number">30</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">socketMat.socketDisconnect();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将在下一篇文章中讲解Linux中基于Socket和OpenCV的实时视频传输的实现。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目前由于项目的需要，实现了基于Socket和OpenCV的实时视频传输。&lt;br&gt;由一台PC（Client客户端）采集摄像头图像后经Socket传输到另一台PC（Server服务器）再显示出来。&lt;br&gt;这一篇介绍在Windows上的实现，在下一篇讲解在Linux上的实现。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Socket" scheme="http://pengzeng.tech/tags/Socket/"/>
    
      <category term="视频传输" scheme="http://pengzeng.tech/tags/%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93/"/>
    
      <category term="OpenCV" scheme="http://pengzeng.tech/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>MFC建立模态对话框和非模态对话框</title>
    <link href="http://pengzeng.tech/2016/03/19/MFC%E5%BB%BA%E7%AB%8B%E6%A8%A1%E6%80%81%E5%AF%B9%E8%AF%9D%E6%A1%86%E5%92%8C%E9%9D%9E%E6%A8%A1%E6%80%81%E5%AF%B9%E8%AF%9D%E6%A1%86/"/>
    <id>http://pengzeng.tech/2016/03/19/MFC建立模态对话框和非模态对话框/</id>
    <published>2016-03-19T12:55:26.000Z</published>
    <updated>2018-01-08T02:32:44.171Z</updated>
    
    <content type="html"><![CDATA[<p>（以下主对话框类为 MainDlg）</p><p><strong>一、建立模态对话框：</strong><br>1.在资源视图里插入Dialog，对新建的对话框进行更改属性添加需要的控件等操作。<br>2.在新建的对话框中右键添加类，添加新的对话框类CModelDlg。<br><a id="more"></a><br>3.在MainDlg.h中包含ModelDlg的头文件：<br><code>#include &quot;CModelDlg.h&quot;</code><br>4.使用如下方式打开模态对话框：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CModelDlg dlg;                  <span class="comment">// 定义对话框类CModelDlg的对象dlg     </span></span><br><span class="line">INT_PTR nResponse = dlg.DoModal();  <span class="comment">// 弹出对话框dlg，并将DoModal函数的返回值）赋值给nResponse     </span></span><br><span class="line"><span class="keyword">if</span> (nResponse == IDOK)              <span class="comment">// 判断返回值是否为OK  </span></span><br><span class="line">&#123;     </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Place code here to handle when the dialog is     </span></span><br><span class="line">    <span class="comment">//  dismissed with OK     </span></span><br><span class="line">&#125;     </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (nResponse == IDCANCEL)     <span class="comment">// 判断返回值是否为Cancel  </span></span><br><span class="line">&#123;     </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Place code here to handle when the dialog is     </span></span><br><span class="line">    <span class="comment">//  dismissed with Cancel     </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>二、建立非模态对话框：</strong><br>1.在资源视图里插入Dialog，对新建的对话框进行更改属性添加需要的控件等操作。<br>2.在新建的对话框中右键添加类，添加新的对话框类CModelessDlg。<br>3.在MainDlg.h中包含CModelessDlg的头文件：<br><code>#include &quot;CModelessDlg.h&quot;</code><br>4.在MainDlg.h中为CMainDlg类添加private成员变量CModelessDlg  *m_pModelessDlg;<br>6.在MainDlg类的构造函数中初始化成员变量 m_pModelessDlg=NULL;<br>6.使用如下方式打开模态对话框：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == m_pModelessDlg)<span class="comment">// 如果指针变量m_pModelessDlg的值为NULL，则对话框还未创建，需要动态创建     </span></span><br><span class="line">&#123;     </span><br><span class="line">    <span class="comment">// 创建非模态对话框实例     </span></span><br><span class="line">    m_pModelessDlg = <span class="keyword">new</span> CModelessDlg();     </span><br><span class="line">    m_pModelessDlg-&gt;Create(IDD_MODELESS_DIALOG, <span class="keyword">this</span>);     </span><br><span class="line">&#125;     </span><br><span class="line"><span class="comment">// 显示非模态对话框     </span></span><br><span class="line">m_pModelessDlg-&gt;ShowWindow(SW_SHOW);     </span><br></pre></td></tr></table></figure></p><p>7.在CMainDlg类的解析函数中按如下方式来销毁窗口释放窗口指针<br>1)在CMainDlg.h中添加析构函数的声明~CMainDlg();<br>2)在CMainDlg.cpp中定义析构函数:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CMainDlg::~CMainDlg()  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> != m_pModelessDlg)     </span><br><span class="line">    &#123;     </span><br><span class="line">        <span class="comment">// 删除非模态对话框对象     </span></span><br><span class="line">        <span class="keyword">delete</span> m_pModelessDlg;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（以下主对话框类为 MainDlg）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、建立模态对话框：&lt;/strong&gt;&lt;br&gt;1.在资源视图里插入Dialog，对新建的对话框进行更改属性添加需要的控件等操作。&lt;br&gt;2.在新建的对话框中右键添加类，添加新的对话框类CModelDlg。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="MFC" scheme="http://pengzeng.tech/tags/MFC/"/>
    
  </entry>
  
  <entry>
    <title>MFC串口控件MSComm的使用</title>
    <link href="http://pengzeng.tech/2016/03/10/MFC%E4%B8%B2%E5%8F%A3%E6%8E%A7%E4%BB%B6MSComm%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://pengzeng.tech/2016/03/10/MFC串口控件MSComm的使用/</id>
    <published>2016-03-10T13:04:31.000Z</published>
    <updated>2018-01-08T02:35:54.131Z</updated>
    
    <content type="html"><![CDATA[<p>（主窗口为MainDlg）</p><ol><li>注册串口控件</li><li>对话框右键插入ActiveX控件，选择 Microsoft communications control version 6.0。</li><li>MSComm控件右键添加变量m_ctrlComm;</li><li><p>添加打开串口按钮响应函数：</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">CString str;<span class="comment">//定义字符串  </span></span><br><span class="line">GetDlgItemText(IDC_BTN_OpenComm,str);  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!m_ctrlComm.get_PortOpen())  </span><br><span class="line">&#123;  </span><br><span class="line">    m_ctrlComm.put_CommPort(<span class="number">1</span>);         <span class="comment">//选择串口COM1  </span></span><br><span class="line">    m_ctrlComm.put_InputMode(<span class="number">1</span>);            <span class="comment">//设置输入方式为二进制方式  </span></span><br><span class="line">    m_ctrlComm.put_Settings(_T(<span class="string">"9600,n,8,1"</span>));  <span class="comment">//波特率为9600，无校验，8数据位，1个停止位   </span></span><br><span class="line">    m_ctrlComm.put_InputLen(<span class="number">1024</span>);          <span class="comment">//设置当前接收区数据长度为1024  </span></span><br><span class="line">    m_ctrlComm.put_RThreshold(<span class="number">1</span>);           <span class="comment">//缓冲区一个字符引发事件  </span></span><br><span class="line">    m_ctrlComm.put_RTSEnable(<span class="number">1</span>);            <span class="comment">//设置RT允许  </span></span><br><span class="line">  </span><br><span class="line">    m_ctrlComm.put_PortOpen(<span class="literal">true</span>);          <span class="comment">//打开串口  </span></span><br><span class="line">    <span class="keyword">if</span>(m_ctrlComm.get_PortOpen())  </span><br><span class="line">    &#123;  </span><br><span class="line">        MessageBox(_T(<span class="string">"串口打开成功"</span>),_T(<span class="string">"提示"</span>));  </span><br><span class="line">        str=_T(<span class="string">"关闭串口"</span>);  </span><br><span class="line">        UpdateData(<span class="literal">true</span>);  </span><br><span class="line">        SetDlgItemText(IDC_BTN_OpenComm,str);   <span class="comment">//改变按钮名称为“关闭串口”  </span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">else</span>   </span><br><span class="line">&#123;  </span><br><span class="line">    m_ctrlComm.put_PortOpen(<span class="literal">false</span>);  </span><br><span class="line">    <span class="keyword">if</span>(str!=_T(<span class="string">"打开串口"</span>))  </span><br><span class="line">    &#123;  </span><br><span class="line">        str=_T(<span class="string">"打开串口"</span>);  </span><br><span class="line">        UpdateData(<span class="literal">true</span>);  </span><br><span class="line">        SetDlgItemText(IDC_BTN_OpenComm,str);   <span class="comment">//改变按钮名称为打开串口  </span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></li><li><p>串口发送示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CString m_edit_send=_T(<span class="string">"Send"</span>);  </span><br><span class="line">m_ctrlComm.put_Output(COleVariant(m_edit_send));    <span class="comment">//把发送编辑框的数据发送出去  </span></span><br></pre></td></tr></table></figure></li><li><p>添加消息接收处理函数：<br>1) 在CMainDlg.h添加消息接收处理函数的声明 void OnOncommMscomm();<br>2) 在CMainDlg.cpp添加消息接收处理函数的定义（其中m_Edit是接收显示的文本框控件的控件变量，cstr是用于储存显示文本框内容的CString类型变量）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMainDlg::OnOncommMscomm()  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 在此处添加消息处理程序代码  </span></span><br><span class="line">    <span class="keyword">if</span>(m_ctrlComm.get_CommEvent()==<span class="number">2</span>)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">1024</span>]=&#123;<span class="number">0</span>&#125;;  </span><br><span class="line">        <span class="keyword">long</span>  k;  </span><br><span class="line">        VARIANT InputData=m_ctrlComm.get_Input();   <span class="comment">//读缓冲区  </span></span><br><span class="line">        COleSafeArray fs;  </span><br><span class="line">        fs=InputData;                   <span class="comment">//VARIANT型变量转换为COleSafeArray型变量  </span></span><br><span class="line">        <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;fs.GetOneDimSize();k++)  </span><br><span class="line">            fs.GetElement(&amp;k,str+k);        <span class="comment">//转换为BYTE型数组  </span></span><br><span class="line">  </span><br><span class="line">        cstr+=str;                  <span class="comment">//接收到编辑框里面  </span></span><br><span class="line">        cstr+=_T(<span class="string">"\r\n"</span>);  </span><br><span class="line"></span><br><span class="line">        m_Edit.SetSel(<span class="number">-1</span>, <span class="number">-1</span>);  </span><br><span class="line">        <span class="keyword">this</span>-&gt;SetDlgItemTextW(IDC_EDIT, cstr);       <span class="comment">//将m_Edit的内容显示到ID为IDC_EDIT的编辑框的最后位置  </span></span><br><span class="line">        m_Edit.LineScroll(m_Edit.GetLineCount()<span class="number">-1</span>,<span class="number">0</span>);   <span class="comment">//将垂直滚动条滚动到最后一行  </span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（主窗口为MainDlg）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注册串口控件&lt;/li&gt;
&lt;li&gt;对话框右键插入ActiveX控件，选择 Microsoft communications control version 6.0。&lt;/li&gt;
&lt;li&gt;MSComm控件右键添加变量m_ctrlComm;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加打开串口按钮响应函数：&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="MFC" scheme="http://pengzeng.tech/tags/MFC/"/>
    
      <category term="串口通信" scheme="http://pengzeng.tech/tags/%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>MFC中加入控制台Console</title>
    <link href="http://pengzeng.tech/2016/03/10/MFC%E4%B8%AD%E5%8A%A0%E5%85%A5%E6%8E%A7%E5%88%B6%E5%8F%B0Console/"/>
    <id>http://pengzeng.tech/2016/03/10/MFC中加入控制台Console/</id>
    <published>2016-03-10T12:59:05.000Z</published>
    <updated>2018-01-08T02:36:11.105Z</updated>
    
    <content type="html"><![CDATA[<ol><li>包含头文件：<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"io.h"</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"fcntl.h"</span>  </span></span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>添加函数:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> xxxDlg::InitConsole()  </span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">int</span> nRet= <span class="number">0</span>;  </span><br><span class="line">    FILE* fp;  </span><br><span class="line">    AllocConsole();  </span><br><span class="line">    nRet= _open_osfhandle((<span class="keyword">long</span>)GetStdHandle(STD_OUTPUT_HANDLE), _O_TEXT);  </span><br><span class="line">    fp = _fdopen(nRet, <span class="string">"w"</span>);  </span><br><span class="line">    *<span class="built_in">stdout</span> = *fp;  </span><br><span class="line">    setvbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>, _IONBF, <span class="number">0</span>);  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></li><li><p>调用 InitConsole() (一般在OnInitialDlg中)。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;包含头文件：&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&quot;io.h&quot;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&quot;fcntl.h&quot;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://pengzeng.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="MFC" scheme="http://pengzeng.tech/tags/MFC/"/>
    
  </entry>
  
</feed>
